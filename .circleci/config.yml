version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - run:
          name: Build debug APK and release APK
          command: |
                ./gradlew :app:assembleDebug
                ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
                sudo gcloud auth activate-service-account --key-file=${HOME}/code/gcloud-service-key.json
                sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
#      - run:
#          name: Test with Firebase Test Lab
#          command: >
#                gcloud firebase test android run
#                --type instrumentation
#                --app app/build/outputs/apk/mock/debug/app-debug.apk
#                --test app/build/outputs/apk/androidTest/mock/debug/app-debug-androidTest.apk
#                --device model=sailfish,version=26,locale=en_US,orientation=portrait
#                --environment-variables=coverage=true,coverageFile=/sdcard/coverage.ec
#                --directories-to-pull=/sdcard --timeout 20m
